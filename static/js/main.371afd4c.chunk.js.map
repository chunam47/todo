{"version":3,"sources":["components/TodoClass/TodoList.js","page/TodoClass/Todo.js","components/TodoHook/TodoItem/ToDoItem.js","components/TodoHook/TodoHook.js","hook/useLocalStorage.js","page/TodoHook/TodoHook.js","components/TodoContext/Store/Store.jsx","components/TodoContext/Components/TodoInput.jsx","components/TodoContext/Components/TodoList.jsx","components/TodoContext/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","state","onComplete","bind","onDelete","id","this","onClickDelete","onClickDone","item","className","isComplete","title","onClick","Component","uuidv4","require","v4","Todo","items","itemValue","handleSubmit","onChange","handleDone","handleDelete","handleShowAll","handleShowDone","handleShowNotDone","JSON","parse","localStorage","getItem","setState","event","preventDefault","console","log","trim","push","setItem","stringify","target","value","newItems","map","i","filter","itemsOrigin","itemDone","forEach","onSubmit","type","placeholder","index","ToDoItem","todo","actions","useState","isEditing","setisEditing","inputValue","setInputValue","e","toLowerCase","handleEdit","toDos","useLocalStorage","key","initialValue","window","error","storedValue","setStoredValue","valueToStore","Function","TodoHook","todoList","setTodoList","setValue","showTodo","setTodo","newTodo","Context","createContext","todos","Provider","children","setTodos","addTodo","removeTodo","newTodos","t","toggleTodo","foundTodo","find","useTodos","useContext","useStyles","makeStyles","theme","textField","width","buttonAdd","TodoInput","classes","setNewTodo","Grid","container","TextField","label","variant","size","Box","pl","Button","disabled","length","color","setFilter","filteredTodos","useMemo","List","ListItem","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","IconButton","pr","component","commonStyles","bgcolor","m","border","borderColor","withProvider","p","sx","borderRadius","direction","App","to","path","Todos","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.371afd4c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\nexport default class TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.onComplete = this.onComplete.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n  }\r\n\r\n  onDelete(id) {\r\n    this.props.onClickDelete(id);\r\n  }\r\n\r\n  onComplete(id) {\r\n    this.props.onClickDone(id);\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <div className=\"TodoItem\">\r\n        <p\r\n          className={\r\n            item.isComplete ? \"TodoItem-complete\" : \"TodoItem-noComplete\"\r\n          }\r\n        >\r\n          {this.props.item.title}\r\n        </p>\r\n        <div>\r\n          <button\r\n            onClick={() => this.onComplete(item.id)}\r\n            className=\"btn btn-outline-info complete\"\r\n          >\r\n            Done\r\n          </button>\r\n          <button\r\n            onClick={() => this.onComplete(item.id)}\r\n            className=\"btn btn-outline-info complete\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={() => this.onDelete(item.id)}\r\n            className=\"btn btn-outline-info delete-item\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TodoList from \"../../components/TodoClass/TodoList\";\r\nimport \"./Todo.css\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      itemValue: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleDone = this.handleDone.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleShowAll = this.handleShowAll.bind(this);\r\n    this.handleShowDone = this.handleShowDone.bind(this);\r\n    this.handleShowNotDone = this.handleShowNotDone.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const items = JSON.parse(localStorage.getItem(\"task\"));\r\n    if (items) {\r\n      this.setState({\r\n        items: items,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { itemValue } = this.state;\r\n    console.log(\"submit\");\r\n    const items = JSON.parse(localStorage.getItem(\"task\")) || [];\r\n    if (itemValue.trim()) {\r\n      items.push({\r\n        id: uuidv4(),\r\n        title: this.state.itemValue.trim(),\r\n        isComplete: false,\r\n      });\r\n      this.setState({\r\n        itemValue: \"\",\r\n        items: items,\r\n      });\r\n      localStorage.setItem(\"task\", JSON.stringify(items));\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      itemValue: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleDone(id) {\r\n    const newItems = this.state.items.map((i) => {\r\n      if (i.id === id) {\r\n        return {\r\n          ...i,\r\n          isComplete: !i.isComplete,\r\n        };\r\n      }\r\n      return i;\r\n    });\r\n    this.setState({ items: newItems });\r\n    localStorage.setItem(\"task\", JSON.stringify(newItems));\r\n  }\r\n\r\n  handleDelete(id) {\r\n    const newItems = this.state.items.filter((item) => {\r\n      return item.id !== id;\r\n    });\r\n    this.setState({ items: newItems });\r\n    localStorage.setItem(\"task\", JSON.stringify(newItems));\r\n  }\r\n\r\n  handleShowDone() {\r\n    const itemsOrigin = JSON.parse(localStorage.getItem(\"task\"));\r\n    const itemDone = [];\r\n    // const show = this.state.show;\r\n\r\n    itemsOrigin.forEach((item) => {\r\n      if (item.isComplete === true) {\r\n        itemDone.push(item);\r\n      }\r\n      this.setState({\r\n        items: itemDone,\r\n      });\r\n    });\r\n  }\r\n  handleShowNotDone() {\r\n    const itemsOrigin = JSON.parse(localStorage.getItem(\"task\"));\r\n    const items = [];\r\n\r\n    itemsOrigin.forEach((item) => {\r\n      if (item.isComplete === false) {\r\n        items.push(item);\r\n      }\r\n      this.setState({\r\n        items: items,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleShowAll() {\r\n    const items = JSON.parse(localStorage.getItem(\"task\"));\r\n    this.setState({\r\n      items: items,\r\n    });\r\n  }\r\n  render() {\r\n    const { items, itemValue } = this.state;\r\n    return (\r\n      <div className=\"Todo\">\r\n        <div className=\"text-center\">Todo</div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"button-todo\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={this.handleShowAll}\r\n            >\r\n              Show all\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={this.handleShowDone}\r\n            >\r\n              Show done\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={this.handleShowNotDone}\r\n            >\r\n              Show not done\r\n            </button>\r\n          </div>\r\n          <div className=\"main-todo\">\r\n            <div className=\"header\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add a new item\"\r\n                value={itemValue}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {items\r\n          ? items.map((item, index) => (\r\n              <TodoList\r\n                key={index}\r\n                item={item}\r\n                onClickDone={this.handleDone}\r\n                onClickDelete={this.handleDelete}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ToDoItem = (props) => {\r\n  const { todo, actions } = props;\r\n  const [isEditing, setisEditing] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const editItem = (item) => {\r\n    setisEditing(true);\r\n    setInputValue(item.title);\r\n  };\r\n\r\n  const saveEditItem = (id) => {\r\n    setisEditing(false);\r\n    actions.handleEdit(id, inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const cancelEditItem = () => {\r\n    setisEditing(false);\r\n    setInputValue(\"\");\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      {isEditing ? (\r\n        <div className=\"TodoItem\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value.toLowerCase())}\r\n          ></input>\r\n          <div>\r\n            <button\r\n              onClick={() => cancelEditItem()}\r\n              className=\"btn complete btn-outline-info\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => saveEditItem(todo.id)}\r\n              className=\"btn complete btn-outline-info\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"TodoItem\">\r\n          <p\r\n            className={\r\n              todo.isComplete ? \"TodoItem-complete\" : \"TodoItem-noComplete\"\r\n            }\r\n          >\r\n            {todo.title}\r\n          </p>\r\n          <div>\r\n            <button\r\n              onClick={() => actions.handleDone(todo.id)}\r\n              className=\"btn btn-outline-info complete\"\r\n            >\r\n              Done\r\n            </button>\r\n            <button\r\n              onClick={() => editItem(todo)}\r\n              className=\"btn complete btn-outline-info\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => actions.handleDelete(todo.id)}\r\n              className=\"btn btn-outline-info delete-item\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport ToDoItem from \"./TodoItem/ToDoItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = (props) => {\r\n  const { toDos } = props;\r\n  return (\r\n    <div>\r\n      {toDos.map((todo) => (\r\n        <ToDoItem key={todo.id} todo={todo} actions={props} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport TodoList from \"../../components/TodoHook/TodoHook\";\r\nimport useLocalStorage from \"../../hook/useLocalStorage\";\r\nimport \"./Todo.css\";\r\n\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nfunction TodoHook() {\r\n  const [todoList, setTodoList] = useLocalStorage(\"task\", []);\r\n  const [value, setValue] = useState(\"\");\r\n  const [showTodo, setTodo] = useState(todoList);\r\n\r\n  function handleValueChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (value.trim()) {\r\n      const newTodo = {\r\n        title: value.trim(),\r\n        id: uuidv4(),\r\n        isComplete: false,\r\n      };\r\n      setTodoList([...todoList, newTodo]);\r\n      setTodo([...todoList, newTodo]);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n  function handleDone(id) {\r\n    const newItems = todoList.map((i) => {\r\n      if (i.id === id) {\r\n        return {\r\n          ...i,\r\n          isComplete: !i.isComplete,\r\n        };\r\n      }\r\n      return i;\r\n    });\r\n    setTodoList(newItems);\r\n    setTodo(newItems);\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    const newTodo = todoList.filter((item) => item.id !== id);\r\n    setTodoList(newTodo);\r\n    setTodo(newTodo);\r\n  }\r\n\r\n  function handleEdit(id, value) {\r\n    const newTodo = todoList.map((todo, index) => {\r\n      if (todo.id === id && value.trim()) {\r\n        return {\r\n          ...todo,\r\n          title: value.trim(),\r\n        };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(newTodo);\r\n    setTodo(newTodo);\r\n  }\r\n  function handleShowDone() {\r\n    const newTodo = [];\r\n    todoList.forEach((i) => {\r\n      if (i.isComplete === true) {\r\n        newTodo.push(i);\r\n      }\r\n      console.log(newTodo);\r\n      setTodo(newTodo);\r\n    });\r\n  }\r\n  function handleShowNotDone() {\r\n    const newTodo = [];\r\n    todoList.forEach((i) => {\r\n      if (i.isComplete === false) {\r\n        newTodo.push(i);\r\n      }\r\n      setTodo(newTodo);\r\n    });\r\n  }\r\n\r\n  function handleShowAll() {\r\n    setTodo(todoList);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Todo\">\r\n      <div className=\"text-center\">Todo Hook</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"button-todo\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handleShowAll}\r\n          >\r\n            Show all\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handleShowDone}\r\n          >\r\n            Show done\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handleShowNotDone}\r\n          >\r\n            Show not done\r\n          </button>\r\n        </div>\r\n        <div className=\"main-todo\">\r\n          <div className=\"header\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Add a new item\"\r\n              value={value}\r\n              onChange={handleValueChange}\r\n            />\r\n            <button className=\"btn btn-primary btn-edit\" type=\"submit\">\r\n              Add Item\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <TodoList\r\n        toDos={showTodo}\r\n        handleDone={handleDone}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      ></TodoList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoHook;\r\n","import React, { useContext, createContext } from \"react\";\r\nimport useLocalStorage from \"../../../hook/useLocalStorage\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\n\r\nconst Context = createContext({\r\n  todos: [],\r\n});\r\n\r\nconst Provider = (props) => {\r\n  const { children } = props;\r\n  const [todos, setTodos] = useLocalStorage(\"task\", []);\r\n  const addTodo = (title) => {\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title,\r\n      isComplete: false,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n  const removeTodo = (id) => {\r\n    const newTodos = todos.filter((t) => t.id !== id);\r\n    setTodos(newTodos);\r\n  };\r\n  const toggleTodo = (id) => {\r\n    const foundTodo = todos.find((t) => t.id === id);\r\n    if (foundTodo) {\r\n      foundTodo.isComplete = !foundTodo.isComplete;\r\n    }\r\n    const newTodos = todos.map((t) => {\r\n      if (t.id === id) {\r\n        return foundTodo;\r\n      }\r\n      return t;\r\n    });\r\n    setTodos(newTodos);\r\n  };\r\n  return (\r\n    <Context.Provider value={{ todos, addTodo, removeTodo, toggleTodo }}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useTodos = () => useContext(Context);\r\n\r\nexport const withProvider = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <Provider>\r\n        <Component {...props} />\r\n      </Provider>\r\n    );\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { useTodos } from \"../Store/Store\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    width: 400,\r\n  },\r\n  buttonAdd: {},\r\n}));\r\n\r\nconst TodoInput = (props) => {\r\n  const { addTodo } = useTodos();\r\n  const classes = useStyles();\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const onClick = () => {\r\n    addTodo(newTodo);\r\n    setNewTodo(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item>\r\n          <TextField\r\n            className={classes.textField}\r\n            label=\"Add a new Todo\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={newTodo}\r\n            onChange={(e) => setNewTodo(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Box pl={2}>\r\n            <Button\r\n              disabled={newTodo.length === 0}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onClick}\r\n            >\r\n              Add Todo\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useTodos } from \"../Store/Store\";\r\n\r\nconst TodoList = () => {\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const { todos, toggleTodo, removeTodo } = useTodos();\r\n  const filteredTodos = useMemo(() => {\r\n    if (filter === \"all\") {\r\n      return todos;\r\n    } else if (filter === \"completed\") {\r\n      return todos.filter((t) => t.isComplete);\r\n    } else if (filter === \"not_completed\") {\r\n      return todos.filter((t) => !t.isComplete);\r\n    }\r\n  }, [todos, filter]);\r\n  return (\r\n    <>\r\n      <List>\r\n        {filteredTodos.map((todo) => {\r\n          return (\r\n            <ListItem key={todo.id}>\r\n              <ListItemText primary={todo.title} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  checked={todo.isComplete}\r\n                  onClick={() => toggleTodo(todo.id)}\r\n                />\r\n                <IconButton onClick={() => removeTodo(todo.id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n      <Box pr={1} component=\"span\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setFilter(\"all\")}\r\n        >\r\n          All\r\n        </Button>\r\n      </Box>\r\n      <Box pr={1} component=\"span\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setFilter(\"completed\")}\r\n        >\r\n          Completed\r\n        </Button>\r\n      </Box>\r\n      <Box component=\"span\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setFilter(\"not_completed\")}\r\n        >\r\n          !Complete\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TodoInput from \"./Components/TodoInput\";\r\nimport TodoList from \"./Components/TodoList\";\r\nimport { withProvider } from \"./Store/Store.jsx\";\r\n\r\nconst commonStyles = {\r\n  bgcolor: \"background.paper\",\r\n  m: 1,\r\n  border: 1,\r\n  borderColor: \"text.primary\",\r\n};\r\nconst Todos = () => {\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        ...commonStyles,\r\n        borderRadius: \"16px\",\r\n        borderColor: \"primary.main\",\r\n      }}\r\n    >\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <TodoInput />\r\n        </Grid>\r\n        <Grid item>\r\n          <TodoList />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withProvider(Todos);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Todo from \"./page/TodoClass/Todo\";\nimport TodoHook from \"./page/TodoHook/TodoHook\";\nimport Todos from \"./components/TodoContext/Todo\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <div className=\"menu\">\n            <div>\n              <Link to=\"/todoHook\" className=\"link\">\n                Todo Hook\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/todoContext\" className=\"link\">\n                Todo Context\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/todo\" className=\"link\">\n                Todo Class\n              </Link>\n            </div>\n          </div>\n          <Route path=\"/todoHook\" component={TodoHook} />\n          <Route path=\"/todoContext\" component={Todos} />\n          <Route path=\"/todo\" component={Todo} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}